[{"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\index.js":"1","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\reportWebVitals.js":"2","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\App.js":"3","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Auth.js":"4","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Home.js":"5","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\context\\auth-context.js":"6","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Signup.js":"7","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Navbar.js":"8","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\CreateChannel.js":"9","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Createchannel.js":"10","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\ChannelList.js":"11","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\channelItems.js":"12"},{"size":517,"mtime":1613186687431,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1613186687436,"results":"15","hashOfConfig":"14"},{"size":1598,"mtime":1613285003797,"results":"16","hashOfConfig":"14"},{"size":3042,"mtime":1613381843785,"results":"17","hashOfConfig":"14"},{"size":2436,"mtime":1613382868712,"results":"18","hashOfConfig":"14"},{"size":201,"mtime":1613186687388,"results":"19","hashOfConfig":"14"},{"size":2699,"mtime":1613382249891,"results":"20","hashOfConfig":"14"},{"size":890,"mtime":1613285011880,"results":"21","hashOfConfig":"14"},{"size":3194,"mtime":1613205490828,"results":"22","hashOfConfig":"14"},{"size":3304,"mtime":1613285454586,"results":"23","hashOfConfig":"14"},{"size":181,"mtime":1613313496384,"results":"24","hashOfConfig":"14"},{"size":187,"mtime":1613283821497,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"16lbro3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\index.js",[],["56","57"],"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\reportWebVitals.js",[],"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\App.js",[],"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Auth.js",[],"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Home.js",["58","59"],"import { Collection } from 'mongoose';\r\nimport React from 'react';\r\nimport AuthContext from '../context/auth-context';\r\nimport './home.css';\r\nimport Navbar from './Navbar';\r\nimport ChannelList from './ChannelList';\r\n\r\n\r\nclass Home extends React.Component {\r\n   \r\n    static contextType = AuthContext;\r\n\r\n    state={\r\n        isdone:false,\r\n        events:[]\r\n    };\r\n    \r\n\r\n    fetchEvents=()=>{\r\n        \r\n        const requestBody = {\r\n          query: `\r\n              query {\r\n                channels {\r\n                  channelname\r\n                  \r\n                }\r\n              }\r\n            `\r\n        };\r\n        if(this.state.isdone===true){\r\n          return\r\n        }\r\n        fetch('http://localhost:8080/graphql', {\r\n          method: 'POST',\r\n          body: JSON.stringify(requestBody),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n          .then(res => {\r\n            \r\n            if (res.status !== 200 && res.status !== 201) {\r\n              throw new Error('Failed!');\r\n            }\r\n            \r\n            return res.json()\r\n          })\r\n          .then(resData => {\r\n            // console.log(resData.data.channels)\r\n            this.setState({isdone:true})\r\n            const event = resData.data.channels;\r\n            this.setState({ events: event });\r\n            \r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            \r\n          });\r\n      }\r\n\r\n    // check=()=>{\r\n    //     if(this.context.token === null){\r\n    //         this.props.history.push('/auth/');\r\n    //     }\r\n    // }\r\n\r\n   \r\n    \r\n\r\n    \r\n    render(){\r\n       // console.log(this.context.username)\r\n      //  console.log(this.state)\r\n        return(<div className=\"home\" onLoad={this.fetchEvents()}>\r\n            <div>\r\n                <Navbar user={ this.context.username }></Navbar>\r\n                </div>\r\n            <h1 className=\"inline\" >Home</h1>\r\n           \r\n            <div>\r\n            {/* there is one problem over here */}\r\n           {this.state.events.map((event) => (\r\n              <div>\r\n                <div className=\"displaychannel\">{event.channelname}</div>\r\n              {/* <div className=\"displaychannel\">by {event.author.username}</div> */}\r\n              </div>\r\n            ))}\r\n     \r\n          </div>\r\n            \r\n            \r\n            \r\n        </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Home","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\context\\auth-context.js",[],"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Signup.js",["60","61","62"],"import React, { Component } from 'react';\r\nimport './Auth.css';\r\n\r\n\r\nclass SignupPage extends Component {\r\n\r\n    \r\n  \r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.emailEL = React.createRef();\r\n        this.passwordEL = React.createRef();\r\n        this.usernameEL = React.createRef();\r\n    }\r\n\r\n    switchHandler = ()=>{\r\n        this.props.history.push(\"/auth\");\r\n    }\r\n    submitHandlerRegister = (event)=>{\r\n        event.preventDefault();\r\n        let username = this.usernameEL.current.value;\r\n        let email = this.emailEL.current.value;\r\n        let password = this.passwordEL.current.value;\r\n\r\n        if(email.trim().length === 0 || password.trim().length === 0){\r\n            console.log(\"error enter the data\");\r\n            return;\r\n        }\r\n        let requestBody = {\r\n            query:`\r\n                mutation{\r\n                    createUser(userInput:{username:\"${username}\",\r\n                     email:\"${email}\", password:\"${password}\"}){\r\n                        _id\r\n                        email\r\n                    }\r\n                }\r\n            `\r\n        }\r\n\r\n        fetch('http://localhost:8080/graphQL',{\r\n            method:\"POST\",\r\n            body:JSON.stringify(requestBody),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }).then(res=>{\r\n            if(res.status !==200 && res.status !== 201){\r\n                throw new Error(\"Failed!\")\r\n            }\r\n            alert('your account sucessfully created login using ur credentials now');\r\n            this.props.history.push('/auth');\r\n            return res.json()\r\n\r\n\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    \r\n    }\r\n\r\n    \r\n    render(){\r\n       return(\r\n        <div className=\"coverauth\">\r\n        {/* this is start of root */}\r\n\r\n <div className=\"container\">\r\n <form onSubmit={ this.submitHandlerRegister }>\r\n     <h2>Register</h2><br></br>\r\n     <input required type=\"text\" id=\"un\"  placeholder=\"username\" ref={ this.usernameEL }\r\n     required/><br></br>\r\n     <label for=\"un\"></label>\r\n     <input required type=\"text\" id=\"un\"  placeholder=\"email\" ref={ this.emailEL }\r\n     required/><br></br>\r\n     <label for=\"un\"></label>\r\n     <input required type=\"password\" id=\"pwd\" placeholder=\"password\" ref={ this.passwordEL }\r\n     required/><br></br>\r\n     <label for=\"pwd\"></label>\r\n     <button type=\"submit\" >Register</button><br></br>\r\n     <h4>Already have an account? <button type=\"button\" onClick={ this.switchHandler }> Login</button></h4>\r\n </form>\r\n </div>\r\n {/* this is end of root div}*/}\r\n</div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nexport default SignupPage;\r\n\r\n","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Navbar.js",["63","64","65","66"],"import React, { Component } from 'react';\r\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Createchannel from './Createchannel';\r\nimport './navbar.css';\r\nimport AuthContext from '../context/auth-context';\r\n\r\nclass Navbar extends Component{\r\n    static contextType = AuthContext;\r\n    logout=()=>{\r\n        this.context.logout();\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <ul>\r\n                <li><NavLink to=\"/home\">Home</NavLink></li>\r\n                <li><a href=\"#sub\">Subscription</a></li>\r\n                <li><NavLink to=\"/createchannel\">Create Channel</NavLink></li>\r\n                <li onClick={ this.logout }>\r\n                    <NavLink to=\"/auth\">Logout</NavLink></li>\r\n                <li><a className=\"active\" href=\"#about\">Welcome { this.props.user } !!</a></li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar",["67","68"],"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\CreateChannel.js",[],"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\Createchannel.js",[],"D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\ChannelList.js",["69","70"],"import React, { Component } from 'react'\r\nimport \"./home.css\"\r\n\r\n// const ChannelList = (props) => {\r\n  \r\n//   return (\r\n    \r\n//   );\r\n      \r\n// }\r\n\r\n// export default ChannelList","D:\\ProjectFolder\\podcast_builder\\frontend\\src\\pages\\channelItems.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":20},{"ruleId":"75","severity":1,"message":"79","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":74,"column":6,"nodeType":"82","endLine":74,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":77,"column":6,"nodeType":"82","endLine":77,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":80,"column":6,"nodeType":"82","endLine":80,"endColumn":14},{"ruleId":"75","severity":1,"message":"83","line":2,"column":19,"nodeType":"77","messageId":"78","endLine":2,"endColumn":27},{"ruleId":"75","severity":1,"message":"84","line":2,"column":29,"nodeType":"77","messageId":"78","endLine":2,"endColumn":34},{"ruleId":"75","severity":1,"message":"85","line":2,"column":36,"nodeType":"77","messageId":"78","endLine":2,"endColumn":42},{"ruleId":"75","severity":1,"message":"86","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":21},{"ruleId":"71","replacedBy":"87"},{"ruleId":"73","replacedBy":"88"},{"ruleId":"75","severity":1,"message":"89","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"90","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Collection' is defined but never used.","Identifier","unusedVar","'ChannelList' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Createchannel' is defined but never used.",["91"],["92"],"'React' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]