[{"D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\index.js":"1","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\reportWebVitals.js":"2","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\App.js":"3","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\Header.js":"4","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\Sidebar.js":"5","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\PostCard.js":"6","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\Footer.js":"7","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\FeaturedPost.js":"8","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\data\\data.js":"9","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\SideDrawer.js":"10","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\Home.js":"11","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\PodcastPlay.js":"12","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\context\\auth-context.js":"13","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\EpisodeList.js":"14"},{"size":517,"mtime":1625813596593,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1625813596659,"results":"17","hashOfConfig":"16"},{"size":1767,"mtime":1625821101880,"results":"18","hashOfConfig":"16"},{"size":1263,"mtime":1625813596411,"results":"19","hashOfConfig":"16"},{"size":1758,"mtime":1625813596543,"results":"20","hashOfConfig":"16"},{"size":2442,"mtime":1625822172826,"results":"21","hashOfConfig":"16"},{"size":1227,"mtime":1625813596409,"results":"22","hashOfConfig":"16"},{"size":1623,"mtime":1625819946249,"results":"23","hashOfConfig":"16"},{"size":2964,"mtime":1625813596546,"results":"24","hashOfConfig":"16"},{"size":3106,"mtime":1625813596540,"results":"25","hashOfConfig":"16"},{"size":3085,"mtime":1625821949027,"results":"26","hashOfConfig":"16"},{"size":3621,"mtime":1625819322519,"results":"27","hashOfConfig":"16"},{"size":320,"mtime":1625814746316,"results":"28","hashOfConfig":"16"},{"size":1540,"mtime":1625824461694,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"rkm16n",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\index.js",[],["67","68"],"D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\reportWebVitals.js",[],"D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\App.js",["69","70","71","72","73","74","75","76","77","78","79","80","81","82"],"import { Container, createMuiTheme, Grid, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport './App.css';\r\nimport FeaturedPost from \"./components/FeaturedPost\";\r\nimport PostCard from \"./components/PostCard\";\r\nimport Header from \"./components/Header\";\r\nimport { featuredPosts, sidebar } from \"./data/data\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from './components/Home'\r\nimport PlayPodcast from './components/PodcastPlay'\r\nimport React from 'react'\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport {AuthProvider} from './context/auth-context'\r\nimport EpisodeList from './components/EpisodeList'\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: 'dark',\r\n    },\r\n  });\r\n\r\n  const [state,setState]=React.useState({\r\n    userId:'',\r\n    isGuest:true,\r\n    token:null,\r\n    tokenExpiration:null\r\n  })\r\n    const login =(userId,isGuest,token,tokenExpiration)=>{\r\n\r\n    setState({token:token,tokenExpiration:tokenExpiration,userId:userId,isGuest:isGuest})\r\n    \r\n  }\r\n  const logout =()=>{\r\n   setState({userId:null,isGuest:true,token:null,tokenExpiration:null })\r\n\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return ( \r\n    <BrowserRouter>\r\n    <AuthProvider value={{userId:state.userId,isGuest:state.isGuest,login:login,token:state.token,tokenExpiration:state.tokenExpiration,logout:logout}}> \r\n      <Switch>\r\n        <Route path=\"/Home\" component={Home}/>\r\n        <Route path=\"/episode\" component={EpisodeList}/>\r\n      </Switch>\r\n    </AuthProvider>\r\n    </BrowserRouter>\r\n    \r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\Header.js",["83","84","85"],"import { Badge, Divider, IconButton, makeStyles, Toolbar, Typography } from \"@material-ui/core\"\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport SideDrawer from \"./SideDrawer\";\r\n/*import classes from \"*.module.css\";*/\r\n\r\nconst useStyles=makeStyles((theme) =>({\r\n    title: {\r\n        flexGrow: 1,\r\n        color:\"#ffffff\"\r\n    },\r\n    tagline: {\r\n        fontSize: 20,\r\n        textTransform: \"uppercase\",\r\n        justifyContent:\"center\",\r\n        color:\"#ffffff\"\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes=useStyles();\r\n    return(\r\n        <>\r\n        <Toolbar>\r\n         <SideDrawer>\r\n          <IconButton color=\"inherit\">\r\n          <MenuIcon />\r\n          </IconButton>\r\n         </SideDrawer>\r\n         <Typography variant='h6'className={classes.title}>PODCAST APP</Typography>\r\n           \r\n            <IconButton ><AccountCircleIcon /></IconButton>\r\n        </Toolbar>\r\n\r\n        <Divider></Divider>\r\n\r\n        <Toolbar className={classes.tagline}>Listening Is Everything</Toolbar>\r\n        </>\r\n    );  \r\n}\r\n\r\nexport default Header;","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\Sidebar.js",["86","87","88"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidebarAboutBox: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  sidebarSection: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  const { archives, description, social, title } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={12} >\r\n      <Paper elevation={0} className={classes.sidebarAboutBox}>\r\n        <Typography align=\"center\" variant=\"h6\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography>{description}</Typography>\r\n      </Paper>\r\n\r\n     {/* <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\r\n        Archives\r\n      </Typography>\r\n      {archives.map((archive) => (\r\n        <Link\r\n          display=\"block\"\r\n          variant=\"body1\"\r\n          href={archive.url}\r\n          key={archive.title}\r\n        >\r\n          {archive.title}\r\n        </Link>\r\n      ))}\r\n*/}\r\n      {/*<Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\r\n        Social\r\n      </Typography>*/}\r\n   {/*    <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\r\n      {social.map((network) => (\r\n        \r\n            <Grid item>\r\n        <Link display=\"block\" variant=\"body1\" href=\"#\" key={network.name}>\r\n         \r\n              <network.icon />{network.name}\r\n             </Link>\r\n            \r\n            \r\n            </Grid>\r\n        \r\n      ))}\r\n      </Grid>*/}\r\n    </Grid>\r\n  );\r\n}","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\PostCard.js",["89"],"import React from \"react\";\r\nimport { makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport EpisodeList from './EpisodeList'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  card: {\r\n    display: \"flex\",\r\n    cursor:\"pointer\"\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n   backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function FeaturedPost({ post }) {\r\n  const classes = useStyles();\r\n\r\n   const [open, setOpen] = React.useState(false);\r\n   const [id,setID] = React.useState(null)\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = (post) => {\r\n    setID(post)\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid item xs={12} md={6}>\r\n      <CardActionArea component=\"a\" href=\"#\">\r\n        <Card className={classes.card} >\r\n          <div className={classes.cardDetails}>\r\n            <CardContent>\r\n              <Typography component=\"h2\" variant=\"h5\">\r\n                {post.channelname}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" paragraph>\r\n                {post.discription}\r\n              </Typography>\r\n              <Button variant=\"text\" className={classes.btn} onClick={()=>{handleToggle(post)}} >\r\n              <HeadsetIcon />\r\n                    Listen Now..\r\n              </Button>\r\n            </CardContent>\r\n          </div>\r\n          <Hidden xsDown>\r\n            <CardMedia\r\n              className={classes.cardMedia}\r\n              image={post.channel_img}\r\n              title={post.imageTitle}\r\n            />\r\n          </Hidden>\r\n\r\n        </Card>\r\n\r\n      </CardActionArea>\r\n    </Grid>\r\n    <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <EpisodeList post={id}/>\r\n      </Backdrop>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\Footer.js",[],"D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\FeaturedPost.js",["90"],"import { Button, Card, CardActions, CardContent, makeStyles, Typography } from \"@material-ui/core\";\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\n\r\n\r\nconst useStyles=makeStyles({\r\n    title:{\r\n        fontSize:40,\r\n        fontFamily:\"montserrat\",\r\n    },\r\n    cover:{\r\n        // backgroundImage: 'url(https://is1-ssl.mzstatic.com/image/thumb/Podcasts115/v4/c5/b0/13/c5b013d4-1c47-f5a0-67a1-20357e86ae2b/mza_12038582178417231024.png/1200x1200bb.jpg)',\r\n        backgroundPosition:\"center\",\r\n        backgroundSize:\"justify\",\r\n        padding:\"35px 25px\",\r\n        cursor:\"pointer\"\r\n\r\n    },\r\n    top:{\r\n        color:\"#ffffff\",\r\n        mixBlendMode:\"difference\"\r\n    }\r\n});\r\n\r\nconst FeaturedPost = ({post}) => {\r\n    const classes =useStyles();\r\n    // console.log(post.channel)\r\n    if(post!=undefined){\r\n    return(\r\n        <Card className={classes.cover} style={{\r\n            backgroundImage: `url(${post.channel_img})`\r\n        }}>\r\n            <CardContent className={classes.top}>\r\n                <Typography className={classes.title}gutterBottom variant='h4'>\r\n                    {post.channelname}\r\n                </Typography>\r\n                <Typography variant='h6'>\r\n                {post.discription}\r\n                </Typography>\r\n                <CardActions>\r\n                <Button variant=\"text\" className={classes.btn}>\r\n                <HeadsetIcon />\r\n                 Listen Now..\r\n                </Button>\r\n            </CardActions>\r\n            </CardContent>\r\n\r\n            \r\n        </Card>\r\n\r\n    );\r\n}\r\nelse{\r\n    return<p>nothing</p>\r\n}\r\n};\r\n\r\nexport default FeaturedPost;","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\data\\data.js",[],"D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\SideDrawer.js",["91"],"import React, { Children } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function SideDrawer({children}) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <ListItem>CATEGORIES</ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <PeopleOutlineIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Interviews\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <SchoolIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Education\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n        <MusicNoteIcon/>\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Music\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <PublicIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"News\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <TabletMacIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Technology\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <ApartmentIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Lifestyle\" />\r\n      </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n \r\n  return (\r\n    <div>\r\n      <React.Fragment key={\"left\"}>\r\n        <Button onClick={toggleDrawer(\"left\", true)}>{children}</Button>\r\n        <Drawer\r\n          anchor={\"left\"}\r\n          open={state[\"left\"]}\r\n          onClose={toggleDrawer(\"left\", false)}\r\n        >\r\n          {list(\"left\")}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\Home.js",["92","93","94","95"],"import { Container, createMuiTheme, Grid, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport '../App.css';\r\nimport FeaturedPost from \"./FeaturedPost\";\r\nimport PostCard from \"./PostCard\";\r\nimport Header from \"./Header\";\r\nimport { featuredPosts, sidebar } from \"../data/data\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Footer from \"./Footer\";\r\nimport LinearDeterminate from './PodcastPlay'\r\nimport React from 'react'\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n\r\n  const [state,setState]=React.useState({\r\n    isdone:false,\r\n    events:[]\r\n  })\r\n  let index=0\r\n  React.useEffect(()=>{\r\n    fetchEvents()\r\n    // console.log(state.events)\r\n\r\n    if(state.events !== undefined){\r\n     index= Math.floor(Math.random() * state.events.length)\r\n     console.log(index)\r\n    }\r\n    \r\n  },[])\r\n  const fetchEvents=()=>{\r\n        \r\n        const requestBody = {\r\n          query: `\r\n              query {\r\n                channels {\r\n                  channelname\r\n                  channel_img\r\n                  discription\r\n                  rss\r\n                }\r\n              }\r\n            `\r\n        };\r\n        if(state.isdone===true){\r\n          return\r\n        }\r\n        fetch('http://localhost:8080/graphql', {\r\n          method: 'POST',\r\n          body: JSON.stringify(requestBody),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n          .then(res => {\r\n            \r\n            if (res.status !== 200 && res.status !== 201) {\r\n              throw new Error('Failed!');\r\n            }\r\n            \r\n            return res.json()\r\n          })\r\n          .then(resData => {\r\n            // console.log(resData.data.channels)\r\n            setState({isdone:true})\r\n            const event = resData.data.channels;\r\n            setState({ events: event });\r\n            \r\n            \r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            \r\n          });\r\n      }\r\n\r\n\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: 'dark',\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  \r\n  if(state.events!=undefined){\r\n   \r\n  return ( \r\n  <ThemeProvider theme={darkTheme}>\r\n   <Container>\r\n    <Header />\r\n    <FeaturedPost post={state.events[index]} />\r\n    <br />\r\n   \r\n    <Grid container spacing={4}>\r\n          {state.events.map((post) => (\r\n            // <p>{post.channelname}</p>\r\n            <PostCard key={post.channelname} post={post} />\r\n          ))}\r\n    </Grid>\r\n    <Grid  container spacing={1} className={classes.mainGrid}>\r\n          <Sidebar\r\n            title={sidebar.title}\r\n            description={sidebar.description}\r\n            archives={sidebar.archives}\r\n            social={sidebar.social}\r\n          />\r\n    </Grid>\r\n    {/*<LinearDeterminate/>*/}\r\n   </Container>\r\n   <Footer\r\n        title=\"Podcast App\"\r\n        description=\"All Rights Reserved\"\r\n      />\r\n      \r\n  </ThemeProvider>\r\n  \r\n  );\r\n}\r\nelse{\r\n  return <p>nothing</p>\r\n}\r\n}\r\n\r\nexport default Home;\r\n","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\PodcastPlay.js",["96"],"// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport logo from '../logo.png'\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Fab from '@material-ui/core/Fab';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import AddIcon from '@material-ui/icons/Add';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n// import MoreIcon from '@material-ui/icons/MoreVert';\r\n// import {ThemeProvider,createMuiTheme} from '@material-ui/core'\r\n// import '../App.css';\r\n\r\n\r\n\r\n\r\n// export default function BottomAppBar() {\r\n//   const classes = useStyles();\r\n//   const theme = createMuiTheme({\r\n//     palette: {\r\n//       type: 'dark',\r\n//     },\r\n//   });\r\n//   return (\r\n//     <React.Fragment>\r\n//       <ThemeProvider theme={theme}>\r\n    \r\n//       <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n//         <Toolbar>\r\n\r\n//         </Toolbar>\r\n//       </AppBar>\r\n//       </ThemeProvider>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n// const useStyles = makeStyles((theme) =>{\r\n  \r\n//     appBar:{\r\n//     top: 'auto',\r\n//     bottom: 0,\r\n//     backgroundColor:theme.palette.background.default,\r\n//   },\r\n// });\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n    backgroundColor:theme.palette.background.default,\r\n  },\r\n  box:{\r\n  \twidth:50,\r\n  \theight:50,\r\n  \t\r\n  },\r\n  img:{\r\n  \twidth:\"100%\",\r\n  \theight:\"100%\"\r\n  },\r\n  container:{\r\n  \tdisplay:\"flex\"\r\n  },\r\n  controles:{\r\n  \t\r\n  },\r\n  name:{\r\n  \tflex:1,\r\n  \tpadding:5,\r\n  \tmarginLeft:20\r\n  }\r\n \r\n}));\r\n\r\n\r\nexport default function LinearDeterminate() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((oldProgress) => {\r\n        if (oldProgress === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10;\r\n        return Math.min(oldProgress + diff, 100);\r\n      });\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n  \t<React.Fragment>\r\n  \t\r\n  \t<AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n  \t<LinearProgress variant=\"determinate\" color=\"secondary\" value={progress} />\r\n  \t<Toolbar className={classes.container}>\r\n  \t\t<div className={classes.box}>\r\n  \t\t<img className={classes.img} src={logo}/>\r\n  \t\t</div>\r\n  \t\t<div className={classes.name}>\r\n  \t\t\t<h4>Podcast Name</h4>\r\n  \t\t</div>\r\n  \t\t<div className={classes.controls}>\r\n  \t\t<IconButton>\r\n  \t\t\t<PlayCircleOutlineIcon/>\r\n  \t\t</IconButton>\r\n  \t\t<IconButton>\r\n  \t\t\t<PauseIcon/>\r\n  \t\t</IconButton>\r\n  \t\t</div>\r\n  \t</Toolbar>\r\n  \t</AppBar>\r\n  \t</React.Fragment>\r\n\r\n  );\r\n}","D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\context\\auth-context.js",[],"D:\\ProjectFolder\\podcast_Application\\latest_frontend\\src\\components\\EpisodeList.js",["97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":19},{"ruleId":"102","severity":1,"message":"106","line":1,"column":37,"nodeType":"104","messageId":"105","endLine":1,"endColumn":41},{"ruleId":"102","severity":1,"message":"107","line":1,"column":55,"nodeType":"104","messageId":"105","endLine":1,"endColumn":68},{"ruleId":"102","severity":1,"message":"108","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":20},{"ruleId":"102","severity":1,"message":"109","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":16},{"ruleId":"102","severity":1,"message":"110","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":14},{"ruleId":"102","severity":1,"message":"111","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":23},{"ruleId":"102","severity":1,"message":"112","line":6,"column":25,"nodeType":"104","messageId":"105","endLine":6,"endColumn":32},{"ruleId":"102","severity":1,"message":"113","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":15},{"ruleId":"102","severity":1,"message":"114","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":14},{"ruleId":"102","severity":1,"message":"115","line":10,"column":8,"nodeType":"104","messageId":"105","endLine":10,"endColumn":19},{"ruleId":"102","severity":1,"message":"116","line":12,"column":32,"nodeType":"104","messageId":"105","endLine":12,"endColumn":40},{"ruleId":"102","severity":1,"message":"117","line":23,"column":9,"nodeType":"104","messageId":"105","endLine":23,"endColumn":18},{"ruleId":"102","severity":1,"message":"118","line":45,"column":9,"nodeType":"104","messageId":"105","endLine":45,"endColumn":16},{"ruleId":"102","severity":1,"message":"119","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":15},{"ruleId":"102","severity":1,"message":"120","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":16},{"ruleId":"102","severity":1,"message":"121","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":31},{"ruleId":"102","severity":1,"message":"122","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":12},{"ruleId":"102","severity":1,"message":"123","line":19,"column":11,"nodeType":"104","messageId":"105","endLine":19,"endColumn":19},{"ruleId":"102","severity":1,"message":"124","line":19,"column":34,"nodeType":"104","messageId":"105","endLine":19,"endColumn":40},{"ruleId":"102","severity":1,"message":"125","line":14,"column":8,"nodeType":"104","messageId":"105","endLine":14,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":27,"column":12,"nodeType":"128","messageId":"129","endLine":27,"endColumn":14},{"ruleId":"102","severity":1,"message":"130","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"111","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":23},{"ruleId":"102","severity":1,"message":"131","line":9,"column":8,"nodeType":"104","messageId":"105","endLine":9,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":29,"column":13,"nodeType":"134","endLine":29,"endColumn":60},{"ruleId":"126","severity":1,"message":"127","line":90,"column":18,"nodeType":"128","messageId":"129","endLine":90,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":119,"column":5,"nodeType":"137","endLine":119,"endColumn":46},{"ruleId":"102","severity":1,"message":"138","line":13,"column":18,"nodeType":"104","messageId":"105","endLine":13,"endColumn":26},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'ThemeProvider' is defined but never used.","'FeaturedPost' is defined but never used.","'PostCard' is defined but never used.","'Header' is defined but never used.","'featuredPosts' is defined but never used.","'sidebar' is defined but never used.","'Sidebar' is defined but never used.","'Footer' is defined but never used.","'PlayPodcast' is defined but never used.","'Redirect' is defined but never used.","'darkTheme' is assigned a value but never used.","'classes' is assigned a value but never used.","'Badge' is defined but never used.","'HomeIcon' is defined but never used.","'NotificationsActiveIcon' is defined but never used.","'Link' is defined but never used.","'archives' is assigned a value but never used.","'social' is assigned a value but never used.","'CircularProgress' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Children' is defined but never used.","'LinearDeterminate' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'index' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","CallExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]