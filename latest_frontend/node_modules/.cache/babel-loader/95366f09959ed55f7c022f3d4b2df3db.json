{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\podcast_Application\\\\latest_frontend\\\\src\\\\components\\\\PodcastPlay.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar'; // import CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline'; // import Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport logo from '../logo.png'; // import Paper from '@material-ui/core/Paper';\n// import Fab from '@material-ui/core/Fab';\n// import List from '@material-ui/core/List';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import ListSubheader from '@material-ui/core/ListSubheader';\n// import Avatar from '@material-ui/core/Avatar';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import AddIcon from '@material-ui/icons/Add';\n// import SearchIcon from '@material-ui/icons/Search';\n// import MoreIcon from '@material-ui/icons/MoreVert';\n// import {ThemeProvider,createMuiTheme} from '@material-ui/core'\n// import '../App.css';\n// export default function BottomAppBar() {\n//   const classes = useStyles();\n//   const theme = createMuiTheme({\n//     palette: {\n//       type: 'dark',\n//     },\n//   });\n//   return (\n//     <React.Fragment>\n//       <ThemeProvider theme={theme}>\n//       <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n//         <Toolbar>\n//         </Toolbar>\n//       </AppBar>\n//       </ThemeProvider>\n//     </React.Fragment>\n//   );\n// }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress'; // const useStyles = makeStyles((theme) =>{\n//     appBar:{\n//     top: 'auto',\n//     bottom: 0,\n//     backgroundColor:theme.palette.background.default,\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    backgroundColor: theme.palette.background.default\n  }\n}));\nexport default function LinearDeterminate() {\n  _s();\n\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(oldProgress => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      color: \"primary\",\n      className: classes.appBar,\n      children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        color: \"secondary\",\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(PauseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 4\n  }, this);\n}\n\n_s(LinearDeterminate, \"MJ88ZWEaTMbo2OdC/u5Pa4jMKfE=\", false, function () {\n  return [useStyles];\n});\n\n_c = LinearDeterminate;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinearDeterminate\");","map":{"version":3,"sources":["D:/ProjectFolder/podcast_Application/latest_frontend/src/components/PodcastPlay.js"],"names":["AppBar","Toolbar","PlayCircleOutlineIcon","IconButton","PauseIcon","logo","React","makeStyles","LinearProgress","useStyles","theme","appBar","top","bottom","backgroundColor","palette","background","default","LinearDeterminate","classes","progress","setProgress","useState","useEffect","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval"],"mappings":";;;AAAA;AACA;AACA,OAAOA,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AAEvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,MADC;AAENC,IAAAA,MAAM,EAAE,CAFF;AAGNC,IAAAA,eAAe,EAACJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHnC;AAF+B,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0Bf,KAAK,CAACgB,QAAN,CAAe,CAAf,CAAhC;AAEAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,UAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BJ,MAAAA,WAAW,CAAEK,WAAD,IAAiB;AAC3B,YAAIA,WAAW,KAAK,GAApB,EAAyB;AACvB,iBAAO,CAAP;AACD;;AACD,cAAMC,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;AACA,eAAOD,IAAI,CAACE,GAAL,CAASJ,WAAW,GAAGC,IAAvB,EAA6B,GAA7B,CAAP;AACD,OANU,CAAX;AAOD,KARwB,EAQtB,GARsB,CAAzB;AAUA,WAAO,MAAM;AACXI,MAAAA,aAAa,CAACP,KAAD,CAAb;AACD,KAFD;AAGD,GAdD,EAcG,EAdH;AAgBA,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,2BAEA,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,OAAjB;AAAyB,MAAA,KAAK,EAAC,SAA/B;AAAyC,MAAA,SAAS,EAAEL,OAAO,CAACR,MAA5D;AAAA,8BACA,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,aAAxB;AAAsC,QAAA,KAAK,EAAC,WAA5C;AAAwD,QAAA,KAAK,EAAES;AAA/D;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,OAAD;AAAA,gCACC;AAAK,UAAA,GAAG,EAAEf;AAAV;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,UAAD;AAAA,iCACC,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFD,eAKC,QAAC,UAAD;AAAA,iCACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBALD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADD;AAkBD;;GAtCuBa,iB;UACNT,S;;;KADMS,iB","sourcesContent":["// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport logo from '../logo.png'\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Fab from '@material-ui/core/Fab';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import AddIcon from '@material-ui/icons/Add';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n// import MoreIcon from '@material-ui/icons/MoreVert';\r\n// import {ThemeProvider,createMuiTheme} from '@material-ui/core'\r\n// import '../App.css';\r\n\r\n\r\n\r\n\r\n// export default function BottomAppBar() {\r\n//   const classes = useStyles();\r\n//   const theme = createMuiTheme({\r\n//     palette: {\r\n//       type: 'dark',\r\n//     },\r\n//   });\r\n//   return (\r\n//     <React.Fragment>\r\n//       <ThemeProvider theme={theme}>\r\n    \r\n//       <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n//         <Toolbar>\r\n\r\n//         </Toolbar>\r\n//       </AppBar>\r\n//       </ThemeProvider>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n// const useStyles = makeStyles((theme) =>{\r\n  \r\n//     appBar:{\r\n//     top: 'auto',\r\n//     bottom: 0,\r\n//     backgroundColor:theme.palette.background.default,\r\n//   },\r\n// });\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n    backgroundColor:theme.palette.background.default,\r\n  },\r\n \r\n}));\r\n\r\n\r\nexport default function LinearDeterminate() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((oldProgress) => {\r\n        if (oldProgress === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10;\r\n        return Math.min(oldProgress + diff, 100);\r\n      });\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n  \t<React.Fragment>\r\n  \t\r\n  \t<AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n  \t<LinearProgress variant=\"determinate\" color=\"secondary\" value={progress} />\r\n  \t<Toolbar>\r\n  \t\t<img src={logo}/>\r\n  \t\t<IconButton>\r\n  \t\t\t<PlayCircleOutlineIcon/>\r\n  \t\t</IconButton>\r\n  \t\t<IconButton>\r\n  \t\t\t<PauseIcon/>\r\n  \t\t</IconButton>\r\n  \t</Toolbar>\r\n  \t</AppBar>\r\n  \t</React.Fragment>\r\n\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}