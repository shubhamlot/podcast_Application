{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\podcast_Application\\\\latest_frontend\\\\src\\\\components\\\\PodcastPlay.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport '../App.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    backgroundColor: theme.palette.background.default\n  }\n}));\nexport default function BottomAppBar() {\n  _s();\n\n  const classes = useStyles();\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark'\n    }\n  });\n  const [progress, setProgress] = React.useState(0);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(oldProgress => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldProgress + diff, 10);\n      });\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        color: \"primary\",\n        className: classes.appBar,\n        children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BottomAppBar, \"MJ88ZWEaTMbo2OdC/u5Pa4jMKfE=\", false, function () {\n  return [useStyles];\n});\n\n_c = BottomAppBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"BottomAppBar\");","map":{"version":3,"sources":["D:/ProjectFolder/podcast_Application/latest_frontend/src/components/PodcastPlay.js"],"names":["React","makeStyles","AppBar","CssBaseline","Toolbar","Typography","IconButton","Paper","Fab","List","ListItem","ListItemAvatar","ListItemText","ListSubheader","Avatar","MenuIcon","AddIcon","SearchIcon","MoreIcon","ThemeProvider","createMuiTheme","LinearProgress","useStyles","theme","appBar","top","bottom","backgroundColor","palette","background","default","BottomAppBar","classes","type","progress","setProgress","useState","useEffect","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAAQC,aAAR,EAAsBC,cAAtB,QAA2C,mBAA3C;AACA,OAAO,YAAP;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AAGA,MAAMC,SAAS,GAAGrB,UAAU,CAAEsB,KAAD,KAAY;AAEvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,MADC;AAENC,IAAAA,MAAM,EAAE,CAFF;AAGNC,IAAAA,eAAe,EAACJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHnC;AAF+B,CAAZ,CAAD,CAA5B;AAUA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AACpC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAGH,cAAc,CAAC;AAC3BQ,IAAAA,OAAO,EAAE;AACPK,MAAAA,IAAI,EAAE;AADC;AADkB,GAAD,CAA5B;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnC,KAAK,CAACoC,QAAN,CAAe,CAAf,CAAhC;AAEApC,EAAAA,KAAK,CAACqC,SAAN,CAAgB,MAAM;AACpB,UAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BJ,MAAAA,WAAW,CAAEK,WAAD,IAAiB;AAC3B,YAAIA,WAAW,KAAK,GAApB,EAAyB;AACvB,iBAAO,CAAP;AACD;;AACD,cAAMC,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;AACA,eAAOD,IAAI,CAACE,GAAL,CAASJ,WAAW,GAAGC,IAAvB,EAA6B,EAA7B,CAAP;AACD,OANU,CAAX;AAOD,KARwB,EAQtB,GARsB,CAAzB;AASC,WAAO,MAAM;AACZI,MAAAA,aAAa,CAACP,KAAD,CAAb;AACD,KAFA;AAGF,GAbD,EAaG,EAbH;AAgBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEf,KAAtB;AAAA,6BAEA,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,OAAjB;AAAyB,QAAA,KAAK,EAAC,SAA/B;AAAyC,QAAA,SAAS,EAAES,OAAO,CAACR,MAA5D;AAAA,gCACA,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAC,aAAxB;AAAsC,UAAA,KAAK,EAAEU;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvCuBH,Y;UACNT,S;;;KADMS,Y","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport {ThemeProvider,createMuiTheme} from '@material-ui/core'\r\nimport '../App.css';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n    backgroundColor:theme.palette.background.default,\r\n  },\r\n \r\n}));\r\n\r\nexport default function BottomAppBar(){\r\n  const classes = useStyles()\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: 'dark',\r\n    },\r\n  })\r\n\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((oldProgress) => {\r\n        if (oldProgress === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10\r\n        return Math.min(oldProgress + diff, 10)\r\n      });\r\n    }, 500)\r\n     return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={theme}>\r\n    \t\r\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n      <LinearProgress variant=\"determinate\" value={progress} />\r\n        <Toolbar>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}